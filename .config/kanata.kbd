(defcfg
  process-unmapped-keys yes
  concurrent-tap-hold   yes
)

(defsrc
  esc     f1    f2    f3    f4    f5    f6    f7    f8    f9    f10   f11   f12
  grv     1     2     3     4     5     6     7     8     9     0     -     =     bspc
  tab     q     w     e     r     t     y     u     i     o     p     [     ]
  caps    a     s     d     f     g     h     j     k     l     ;     '     \     ret
  lsft  < z     x     c     v     b     n     m     ,     .     /     rsft
  fn      lctl  lalt  lmet              spc               rmet  ralt  ◀    ▲ ▼    ▶  
)

(deflayer base
  esc     🔅    🔆    mctl  sls   dtn   dnd   ◀◀    ▶⏸    ▶▶    🔇    🔉    🔊
  grv     1     2     3     4     5     6     7     8     9     0     -     =     bspc
  tab     q     w     e     r     t     y     u     i     o     p     [     ]
  @caps   @LS   @LA   @LM   @LC   g     h     @C    @M    @A    @S    '     \     ret
  @lsft < z     x     c     v     b     n     m     ,     .     /     rsft
  @fnl    lctl  @num  @lmet             @nav              @ralt @ralt ◀    ▲ ▼    ▶
)

(deflayer fn
  _      f1    f2    f3    f4    f5    f6    f7    f8    f9    f10   f11   f12
  _      _     _     _     _     _     _     _     _     _     _     _     _     del
  _      _     _     _     lrld  _     _     _     _     _     _     _     _
  _      _     _     _     _     _     _     _     _     _     _     _     _     _
  _    _ _     _     _     _     _     _     _     _     _     _     _
  _      _     _     _                 _                 _     _     ⤒    ⇞ ⇟    ⤓
)

(deflayer nav
  esc    🔅    🔆    mctl  sls   dtn   dnd   ◀◀    ▶⏸    ▶▶    🔇    🔉    🔊
  _      _     _     _     _     _     _     _     _     _     _     _     _     _
  _      _     _     _     _     _     ⇞     ⤒     ▲     ⤓     _     _     _
  lsft   _     lmet  lalt  lctl  _     ⇟     ◀     ▼     ▶     _     _     _     _
  _    _ _     @cut  @cpy  @pst  _     bspc  del   _     _     _     _
  _      _     _     @nmet       _                 _     _     _    _ _    _
)

(deflayer num
  esc    🔅    🔆    mctl  sls   dtn   dnd   ◀◀    ▶⏸    ▶▶    🔇    🔉    🔊
  _      _     _     _     _     _     _     _     _     _     _     _     _     _
  _      f1    f2    f3    f4     _     kp/   kp7   kp8   kp9   kp*   _     _
  _      f5    f6    f7    f8     _     kp+   kp4   kp5   kp6   kp0   _     _     _
  _    _ f9    f10   f11   f2     _     kp-   kp1   kp2   kp3   kp.   _
  _      _     _     _                 _                 _     _     _    _ _    _
)

(defvar
  tap-time 200
  hold-time 200
)

(deftemplate charmod (mod)
  (switch
    ((key-timing 3 less-than 450)) _ break
    () (tap-hold-release-timeout 200 500 _ $mod _) break
  )
)

(defalias
  caps (tap-hold $tap-time $hold-time esc caps)
  lsft (tap-hold-press $tap-time $hold-time esc lsft)

  LS (t! charmod lsft)
  LM (t! charmod lmet)
  LA (t! charmod lalt)
  LC (t! charmod lctl)
  C (t! charmod rctl)
  A (t! charmod ralt)
  M (t! charmod rmet)
  S (t! charmod rsft)

  cut M-c
  cpy M-h
  pst M-u

  fnl (tap-hold $tap-time $hold-time fn (layer-toggle fn))
  num (layer-toggle num)
  lmet (tap-hold-press $tap-time $hold-time bspc lmet)
  nmet (tap-hold-press $tap-time $hold-time del lmet)
  nav (tap-hold $tap-time $hold-time spc (layer-toggle nav))
  ralt (tap-hold-press $tap-time $hold-time ret ralt)
  rmet (tap-hold-press $tap-time $hold-time ret rmet)
)
