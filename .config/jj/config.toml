"$schema" = "https://jj-vcs.github.io/jj/latest/config-schema.json"

[user]
name = "GaÃ«tan Lehmann"
email = "gaetan.lehmann@gmail.com"

[git]
push-bookmark-prefix = "glehmann/"

[ui]
default-command = ["log", "-T", "zen"]
conflict-marker-style = "git"

[colors]
"diff token" = { underline = false }
"diff removed token" = { bg = "#221313" }
"diff added token" = { bg = "#222922" }

[templates]
log = "builtin_log_compact_full_description"

[signing]
behavior = "own"
backend = "ssh"
key = "~/.ssh/id_ed25519.pub"

[aliases]
annotate = ["file", "annotate"]
ci = ["commit"]
clone = ["git", "clone", "--colocate"]
init = ["git", "init", "--colocate"]
push = ["git", "push"]
tug = ["bookmark", "move", "--from", "closest_bookmark(@)", "--to", "closest_pushable(@)"]
up = ["util", "exec", "--", "bash", "-c", """
#!/usr/bin/env bash
set -euo pipefail
bookmark=`jj log -r 'heads(::@ & tracked_remote_bookmarks())' -T bookmarks --no-graph`
jj git fetch
jj rebase -d $bookmark
""", ""]
fetch = ["git", "fetch"]
remote = ["git", "remote"]
generate-bookmark-name = ["util", "exec", "--", "bash", "-c", """
#!/bin/bash
set -e
rev="closest_pushable(@)"
if [ -n "$1" ]; then
	rev=$1
fi
cat <<EOF > /tmp/jj-bookmark-prompt
Generate a short branch name for these commits.
Only produce one branch name without explanation.
Use - as separator.
Don't include any / character in the branch name.
Never include WIP or feat in the branch name.

EOF
jj log -r "trunk()..$rev" --no-graph -T description -s >> /tmp/jj-bookmark-prompt
bookmark=gln/`cat /tmp/jj-bookmark-prompt | gemini-cli prompt --model gemini-2.0-flash -`
change_id=`jj log -T 'change_id.short(4)' --no-graph -r $rev`
echo $bookmark-$change_id
""", ""]
# create and push bookmark
cpb = ["util", "exec", "--", "bash", "-c", """
#!/bin/bash
set -e
rev="closest_pushable(@)"
if [ -n "$1" ]; then
	rev=$1
fi
bookmark=`jj generate-bookmark-name $rev`
jj bookmark set -r $rev $bookmark
jj push -b $bookmark --allow-new
""", ""]
tp = ["util", "exec", "--", "bash", "-c", "jj tug && jj push"]

[revset-aliases]
branch = "trunk()::@"
br = "branch"
'closest_bookmark(to)' = 'heads(::to & bookmarks())'
'closest_pushable(to)' = 'heads(::to & ~description(exact:"") & (~empty() | merges()))'

[template-aliases]
detailed = "builtin_log_detailed"
ol = "builtin_log_oneline"
zen = '''
if(root,
separate(" ",
  format_short_change_id(self.change_id()),
    label("root", "root()"),
    self.bookmarks(),
  ) ++ "\n",
  label(if(current_working_copy, "working_copy"),
    concat(
      separate(" ",
        format_short_change_id_with_hidden_and_divergent_info(self),
        bookmarks,
        tags,
        working_copies,
        if(conflict, label("conflict", "conflict")),
        if(config("ui.show-cryptographic-signatures").as_boolean(),
          format_short_cryptographic_signature(signature)),
        if(empty, label("empty", "(empty)")),
        if(description,
          description.first_line(),
          label(if(empty, "empty"), description_placeholder),
        ),
      ) ++ "\n",
    ),
  )
)
'''

# override user.email if the repository is located under ~/src/vates
[[--scope]]
--when.repositories = ["~/src/vates"]
[--scope.user]
email = "gaetan.lehmann@vates.tech"
[--scope.templates]
commit_trailers = "format_signed_off_by_trailer(self)"
